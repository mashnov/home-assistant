## DATE_TIME SENSORS
- sensor:
  - name: 'date_time'
    state: '{{ utcnow() }}'
    device_class: 'timestamp'
    icon: >
      {% set defaultIcon = 'mdi:help-circle' %}
      {% set nightIcon = is_state('binary_sensor.date_time_night', 'on') and 'mdi:clock-time-eleven-outline' %}
      {% set morningIcon = is_state('binary_sensor.date_time_morning', 'on') and 'mdi:clock-time-nine' %}
      {% set dayIcon = is_state('binary_sensor.date_time_day', 'on') and 'mdi:clock-time-eleven' %}
      {% set eveningIcon = is_state('binary_sensor.date_time_evening', 'on') and 'mdi:clock-time-nine-outline' %}
      {% set twilightIcon = is_state('binary_sensor.date_time_twilight', 'on') and 'mdi:clock-time-seven-outline' %}
      {{ nightIcon or morningIcon or dayIcon or eveningIcon or twilightIcon or defaultIcon }}
    attributes:
      dmy_hm_z: '{{ utcnow().strftime("%d %m %Y %H:%M %z") }}'
      dmy_hm: '{{ utcnow().strftime("%d %m %Y %H:%M") }}'
      dmy: '{{ utcnow().strftime("%d %m %Y") }}'
      hmz: '{{ utcnow().strftime("%H:%M %z") }}'
      hm: '{{ utcnow().strftime("%H:%M") }}'
      z: '{{ utcnow().strftime("%z") }}'
      dmy_hm_z_local: '{{ now().strftime("%d %m %Y %H:%M %z") }}'
      dmy_hm_local: '{{ now().strftime("%d %m %Y %H:%M") }}'
      dmy_local: '{{ now().strftime("%d %m %Y") }}'
      hmz_local: '{{ now().strftime("%H:%M %z") }}'
      hm_local: '{{ now().strftime("%H:%M") }}'
      z_local: '{{ now().strftime("%z") }}'

- binary_sensor:
  - name: 'date_time_night'
    icon: 'mdi:clock-time-eleven-outline'
    state: >
      {% set timeNow = strptime(state_attr('sensor.date_time', 'hm_local'), '%H:%M').time() %}
      {% set timeFrom = strptime(states('input_datetime.date_time_night_time'), "%H:%M:%S").time() %}
      {% set timeTill = strptime(states('input_datetime.date_time_morning_time'), "%H:%M:%S").time() %}
      {% if timeFrom > timeTill %}
        {{ (timeFrom <= timeNow) or (timeNow <= timeTill) }}
      {% else %}
        {{ (timeFrom <= timeNow) and (timeNow <= timeTill) }}
      {% endif %}

  - name: 'date_time_morning'
    icon: 'mdi:clock-time-nine'
    state: >
      {% set timeNow = strptime(state_attr('sensor.date_time', 'hm_local'), '%H:%M').time() %}
      {% set timeFrom = strptime(states('input_datetime.date_time_morning_time'), "%H:%M:%S").time() %}
      {% set timeTill = strptime(states('input_datetime.date_time_day_time'), "%H:%M:%S").time() %}
      {% if timeFrom > timeTill %}
        {{ (timeFrom <= timeNow) or (timeNow <= timeTill) }}
      {% else %}
        {{ (timeFrom <= timeNow) and (timeNow <= timeTill) }}
      {% endif %}

  - name: 'date_time_day'
    icon: 'mdi:clock-time-eleven'
    state: >
      {% set timeNow = strptime(state_attr('sensor.date_time', 'hm_local'), '%H:%M').time() %}
      {% set timeFrom = strptime(states('input_datetime.date_time_day_time'), "%H:%M:%S").time() %}
      {% set timeTill = strptime(states('input_datetime.date_time_evening_time'), "%H:%M:%S").time() %}
      {% if timeFrom > timeTill %}
        {{ (timeFrom <= timeNow) or (timeNow <= timeTill) }}
      {% else %}
        {{ (timeFrom <= timeNow) and (timeNow <= timeTill) }}
      {% endif %}

  - name: 'date_time_evening'
    icon: 'mdi:clock-time-nine-outline'
    state: >
      {% set timeNow = strptime(state_attr('sensor.date_time', 'hm_local'), '%H:%M').time() %}
      {% set timeFrom = strptime(states('input_datetime.date_time_evening_time'), "%H:%M:%S").time() %}
      {% set timeTill = strptime(states('input_datetime.date_time_twilight_time'), "%H:%M:%S").time() %}
      {% if timeFrom > timeTill %}
        {{ (timeFrom <= timeNow) or (timeNow <= timeTill) }}
      {% else %}
        {{ (timeFrom <= timeNow) and (timeNow <= timeTill) }}
      {% endif %}

  - name: 'date_time_twilight'
    icon: 'mdi:clock-time-seven-outline'
    state: >
      {% set timeNow = strptime(state_attr('sensor.date_time', 'hm_local'), '%H:%M').time() %}
      {% set timeFrom = strptime(states('input_datetime.date_time_twilight_time'), "%H:%M:%S").time() %}
      {% set timeTill = strptime(states('input_datetime.date_time_night_time'), "%H:%M:%S").time() %}
      {% if timeFrom > timeTill %}
        {{ (timeFrom <= timeNow) or (timeNow <= timeTill) }}
      {% else %}
        {{ (timeFrom <= timeNow) and (timeNow <= timeTill) }}
      {% endif %}
