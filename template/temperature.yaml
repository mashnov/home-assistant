## TEMPERATURE
- sensor:
  - name: 't_level'
    device_class: 'temperature'
    unit_of_measurement: '°C'
    state: >
      {% set kitchen = states('input_number.t_kitchen_level') | float(0) %}
      {% set hall = states('input_number.t_hall_level') | float(0) %}
      {% set bedroom = states('input_number.t_bedroom_level') | float(0) %}
      {% set living = states('input_number.t_living_level') | float(0) %}
      {{ ((kitchen + hall + bedroom + living) / 4) | round(1) }}

  - name: 't_kitchen_level'
    device_class: 'temperature'
    unit_of_measurement: '°C'
    state: >
      {% set minValue = state_attr('input_number.t_kitchen_level', 'min') %}
      {{ states('sensor.kitchen_temperature') | float(minValue) | round(1) }}

  - name: 't_bath_level'
    device_class: 'temperature'
    unit_of_measurement: '°C'
    state: >
      {% set minValue = state_attr('input_number.t_bath_level', 'min') %}
      {{ states('sensor.bath_temperature') | float(minValue) | round(1) }}

  - name: 't_hall_level'
    device_class: 'temperature'
    unit_of_measurement: '°C'
    state: >
      {% set minValue = state_attr('input_number.t_hall_level', 'min') %}
      {{ states('sensor.hall_temperature') | float(minValue) | round(1) }}

  - name: 't_bedroom_level'
    device_class: 'temperature'
    unit_of_measurement: '°C'
    state: >
      {% set minValue = state_attr('input_number.t_bedroom_level', 'min') %}
      {{ states('sensor.bedroom_temperature') | float(minValue) | round(1) }}

  - name: 't_living_level'
    device_class: 'temperature'
    unit_of_measurement: '°C'
    state: >
      {% set minValue = state_attr('input_number.t_living_level', 'min') %}
      {{ states('sensor.living_temperature') | float(minValue) | round(1) }}

  - name: 't_balcony_level'
    device_class: 'temperature'
    unit_of_measurement: '°C'
    state: >
      {% set minValue = state_attr('input_number.t_balcony_level', 'min') %}
      {{ states('sensor.balcony_temperature') | float(minValue) | round(1) }}

- binary_sensor:
  - name: 't_hight_state'
    state: >
      {% set sensorValue = states('sensor.t_level') | int(0) %}
      {% set normalValue = states('input_number.t_target') | int(0) %}
      {% set offsetValue = states('input_number.t_offset') | int(0) %}
      {% set targetValue = normalValue + offsetValue %}
      {{ sensorValue > targetValue }}

  - name: 't_low_state'
    state: >
      {% set sensorValue = states('sensor.t_level') | int(0) %}
      {% set normalValue = states('input_number.t_target') | int(0) %}
      {% set offsetValue = states('input_number.t_offset') | int(0) %}
      {% set targetValue = normalValue - offsetValue %}
      {{ sensorValue < targetValue }}

  - name: 't_hight_boolean'
    state: "{{ is_state('input_boolean.t_hight_state', 'on') }}"

  - name: 't_hight_boolean'
    state: "{{ is_state('input_boolean.t_low_state', 'on') }}"
