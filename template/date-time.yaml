- sensor:
  - name: 'date-time'
    state: "{{ utcnow() }}"
    device_class: 'timestamp'
    icon: "mdi:calendar-clock"
    attributes:
      dmy_hms_z: '{{ as_timestamp(utcnow()) | timestamp_custom("%d %m %Y %H:%M:%S %z", false) }}'
      dmy_hm_z: '{{ as_timestamp(utcnow()) | timestamp_custom("%d %m %Y %H:%M %z", false) }}'
      dmy_hms: '{{ as_timestamp(utcnow()) | timestamp_custom("%d %m %Y %H:%M:%S", false) }}'
      dmy_hm: '{{ as_timestamp(utcnow()) | timestamp_custom("%d %m %Y %H:%M", false) }}'
      dmy: '{{ as_timestamp(utcnow()) | timestamp_custom("%d %m %Y", false) }}'
      hms: '{{ as_timestamp(utcnow()) | timestamp_custom("%H:%M:%S", false) }}'
      hm: '{{ as_timestamp(utcnow()) | timestamp_custom("%H:%M", false) }}'
      z: '{{ as_timestamp(utcnow()) | timestamp_custom("%z", false) }}'
      dmy_hms_z_local: '{{ as_timestamp(now()) | timestamp_custom("%d %m %Y %H:%M:%S %z") }}'
      dmy_hm_z_local: '{{ as_timestamp(now()) | timestamp_custom("%d %m %Y %H:%M %z") }}'
      dmy_hms_local: '{{ as_timestamp(now()) | timestamp_custom("%d %m %Y %H:%M:%S") }}'
      dmy_hm_local: '{{ as_timestamp(now()) | timestamp_custom("%d %m %Y %H:%M") }}'
      dmy_local: '{{ as_timestamp(now()) | timestamp_custom("%d %m %Y") }}'
      hms_local: '{{ as_timestamp(now()) | timestamp_custom("%H:%M:%S") }}'
      hm_local: '{{ as_timestamp(now()) | timestamp_custom("%H:%M") }}'
      z_local: '{{ as_timestamp(now()) | timestamp_custom("%z") }}'

- binary_sensor:
  - name: 'day-time'
    device_class: 'door'
    state: "{{ state_attr('binary_sensor.door', 'hall') }}"
    icon: >
      {% set isClose = is_state('binary_sensor.door', 'off') %}
      {% set closeIcon = 'mdi:door-closed' %}
      {% set openIcon = 'mdi:door-open' %}
      {{ iif(isClose, closeIcon, openIcon) }}
    attributes:
      night: "{{ is_state('binary_sensor.vr_door_toilet', 'on') }}"
      morning: "{{ is_state('binary_sensor.vr_door_hall', 'on') }}"
      day: "{{ is_state('binary_sensor.vr_door_bedroom', 'on') }}"
      evening: "{{ is_state('binary_sensor.vr_door_living', 'on') }}"
