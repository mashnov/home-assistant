- sensor:
  - name: 's_cloud'
    unit_of_measurement: '%'
    icon: >
      {% set lIcon = 'mdi:weather-sunny' %}
      {% set hIcon = 'mdi:apple-icloud' %}
      {% set isHight = is_state('binary_sensor.s_is_cloudly', 'on') %}
      {{ iif(isHight, hIcon, lIcon) }}
    state: "{{ states('sensor.openweathermap_cloud_coverage') | int(0) }}"
    attributes:
      isCloudly: >
        {% set sensorValue = states('sensor.s_cloud') | float(0) %}
        {% set normalValue = states('input_number.s_cloud_target') | int(0) %}
        {{ sensorValue > normalValue }}

  - name: 's_sun'
    unit_of_measurement: 'Â°'
    icon: >
      {% set isSunny = state_attr('sensor.s_sun', 'isSunny') %}
      {% set offIcon = 'mdi:shield-sun-outline' %}
      {% set onIcon = 'mdi:shield-sun' %}
      {{ iif(isSunny, onIcon, offIcon) }}
    state: >
      {% set azimuth = state_attr('sun.sun', 'azimuth') | int(0) %}
      {% set elevation = state_attr('sun.sun', 'elevation') | int(0) %}
      {{ azimuth }} / {{ elevation }}
    attributes:
      isSunny: >
        {% set isAazimuth = state_attr('sensor.s_sun', 'isAazimuth') %}
        {% set isElevation = state_attr('sensor.s_sun', 'isElevation') %}
        {{ isAazimuth and isElevation }}
      isAazimuth: >
        {% set sensorValue = states('sensor.s_sun').split('/')[0] | int(0) %}
        {% set targetValue = states('input_number.s_azimuth_target') | int(0) %}
        {% set offsetValue = states('input_number.s_azimuth_offset') | int(0) %}
        {% set minValue = targetValue - offsetValue %}
        {% set maxValue = targetValue + offsetValue %}
        {{ minValue < sensorValue < maxValue }}
      isElevation: >
        {% set sensorValue = states('sensor.s_sun').split('/')[1] | int(0) %}
        {% set targetValue = states('input_number.s_elevation_target') | int(0) %}
        {% set offsetValue = states('input_number.s_elevation_offset') | int(0) %}
        {% set minValue = targetValue - offsetValue %}
        {% set maxValue = targetValue + offsetValue %}
        {{ minValue < sensorValue < maxValue }}
