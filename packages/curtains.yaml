curtain:
  input_number:
    # kitchen
    curtain_kitchen_position_open:
      max: 25
      min: 0
      step: 1
    curtain_kitchen_position_night:
      max: 100
      min: 0
      step: 1
    curtain_kitchen_position_sun:
      max: 100
      min: 0
      step: 1
    curtain_kitchen_position_ventilation:
      max: 100
      min: 0
      step: 1
    # bedroom
    curtain_bedroom_position_open:
      max: 25
      min: 0
      step: 1
    curtain_bedroom_position_night:
      max: 100
      min: 0
      step: 1
    curtain_bedroom_position_sun:
      max: 100
      min: 0
      step: 1
    curtain_bedroom_position_ventilation:
      max: 100
      min: 0
      step: 1
    # living
    curtain_living_position_open:
      max: 25
      min: 0
      step: 1
    curtain_living_position_night:
      max: 100
      min: 0
      step: 1
    curtain_living_position_sun:
      max: 100
      min: 0
      step: 1
    curtain_living_position_ventilation:
      max: 100
      min: 0
      step: 1

  input_boolean:
    # kitchen
    curtain_kitchen_use_sensors:
      icon: 'mdi:window-shutter-auto'
    curtain_kitchen_use_sun:
      icon: 'mdi:shield-sun-outline'
    curtain_kitchen_use_night:
      icon: 'mdi:weather-night'
    curtain_kitchen_use_ventilation:
      icon: 'mdi:tailwind'
    # bedroom
    curtain_bedroom_use_sensors:
      icon: 'mdi:window-shutter-auto'
    curtain_bedroom_use_sun:
      icon: 'mdi:shield-sun-outline'
    curtain_bedroom_use_night:
      icon: 'mdi:weather-night'
    curtain_bedroom_use_ventilation:
      icon: 'mdi:tailwind'
    # living
    curtain_living_use_sensors:
      icon: 'mdi:window-shutter-auto'
    curtain_living_use_sun:
      icon: 'mdi:shield-sun-outline'
    curtain_living_use_night:
      icon: 'mdi:weather-night'
    curtain_living_use_ventilation:
      icon: 'mdi:tailwind'
 
  template:
  - sensor: 
    # kitchen
    - name: 'curtain_kitchen_position'
      device_class: power_factor
      unit_of_measurement: '%'
      state: "{{ state_attr('cover.curtain_kitchen', 'position') | int(0) }}"
    # bedroom
    - name: 'curtain_bedroom_position'
      device_class: power_factor
      unit_of_measurement: '%'
      state: "{{ state_attr('cover.curtain_bedroom', 'position') | int(0) }}"
    # living
    - name: 'curtain_living_position'
      device_class: power_factor
      unit_of_measurement: '%'
      state: "{{ state_attr('cover.curtain_living', 'position') | int(0) }}"

  automation:
  # kitchen
    - alias: 'kitchen_curtains_action'
      initial_state: true
      trigger:
      - platform: state
        entity_id: input_boolean.curtain_kitchen_use_night
      - platform: state
        entity_id: input_boolean.curtain_kitchen_use_ventilation
      - platform: state
        entity_id: binary_sensor.sun_kitchen_curtain_is_bright
      - platform: state
        entity_id: binary_sensor.solar_kitchen_sun_is_hit
      - platform: state
        entity_id: binary_sensor.night_kitchen_is_night
      - platform: state
        entity_id: binary_sensor.ventilation_kitchen_is_ventilation
      - platform: state
        entity_id: input_number.curtain_kitchen_position_open
      - platform: state
        entity_id: input_number.curtain_kitchen_position_night
      - platform: state
        entity_id: input_number.curtain_kitchen_position_sun
      - platform: state
        entity_id: input_number.curtain_kitchen_position_ventilation
      action:
      - choose:
        # sun is bright & hit
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_sun
              state: 'on'
            - condition: state
              entity_id: binary_sensor.solar_kitchen_sun_is_hit
              state: 'on'
            - condition: state
              entity_id: binary_sensor.sun_kitchen_curtain_is_bright
              state: 'on'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_kitchen
            data_template:
              position: '{{ states("input_number.curtain_kitchen_position_sun") }}'
        # sun is not bright & hit
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_sun
              state: 'on'
            - condition: state
              entity_id: binary_sensor.solar_kitchen_sun_is_hit
              state: 'on'
            - condition: state
              entity_id: binary_sensor.sun_kitchen_curtain_is_bright
              state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_kitchen
            data_template:
              position: '{{ states("input_number.curtain_kitchen_position_open") }}'
        # is night ventilation
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_night
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_ventilation
              state: 'on'
            - condition: state
              entity_id: binary_sensor.night_kitchen_is_night
              state: 'on'
            - condition: state
              entity_id: binary_sensor.ventilation_kitchen_is_ventilation
              state: 'on'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_kitchen
            data_template:
              position: '{{ states("input_number.curtain_kitchen_position_ventilation") }}'
        # is night closed
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_night
              state: 'on'
            - condition: state
              entity_id: binary_sensor.night_kitchen_is_night
              state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: input_boolean.curtain_kitchen_use_ventilation
                state: 'off'
              - condition: and
                conditions:
                - condition: state
                  entity_id: input_boolean.curtain_kitchen_use_ventilation
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.ventilation_kitchen_is_ventilation
                  state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_kitchen
            data_template:
              position: '{{ states("input_number.curtain_kitchen_position_night") }}'
        # is day opend
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_kitchen_use_sensors
              state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: input_boolean.night_kitchen_is_night
                state: 'off'
              - condition: or
                conditions:
                - condition: state
                  entity_id: input_boolean.curtain_kitchen_use_night
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.night_kitchen_is_night
                  state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_kitchen
            data_template:
              position: '{{ states("input_number.curtain_kitchen_position_open") }}'

  # bedroom
    - alias: 'bedroom_curtains_action'
      initial_state: true
      trigger:
      - platform: state
        entity_id: input_boolean.curtain_bedroom_use_night
      - platform: state
        entity_id: input_boolean.curtain_bedroom_use_ventilation
      - platform: state
        entity_id: binary_sensor.sun_bedroom_curtain_is_bright
      - platform: state
        entity_id: binary_sensor.solar_bedroom_sun_is_hit
      - platform: state
        entity_id: binary_sensor.night_bedroom_is_night
      - platform: state
        entity_id: binary_sensor.ventilation_bedroom_is_ventilation
      - platform: state
        entity_id: input_number.curtain_bedroom_position_open
      - platform: state
        entity_id: input_number.curtain_bedroom_position_night
      - platform: state
        entity_id: input_number.curtain_bedroom_position_sun
      - platform: state
        entity_id: input_number.curtain_bedroom_position_ventilation
      action:
      - choose:
        # sun is bright & hit
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_sun
              state: 'on'
            - condition: state
              entity_id: binary_sensor.solar_bedroom_sun_is_hit
              state: 'on'
            - condition: state
              entity_id: binary_sensor.sun_bedroom_curtain_is_bright
              state: 'on'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_bedroom
            data_template:
              position: '{{ states("input_number.curtain_bedroom_position_sun") }}'
        # sun is not bright & hit
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_sun
              state: 'on'
            - condition: state
              entity_id: binary_sensor.solar_bedroom_sun_is_hit
              state: 'on'
            - condition: state
              entity_id: binary_sensor.sun_bedroom_curtain_is_bright
              state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_bedroom
            data_template:
              position: '{{ states("input_number.curtain_bedroom_position_open") }}'
        # is night ventilation
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_night
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_ventilation
              state: 'on'
            - condition: state
              entity_id: binary_sensor.night_bedroom_is_night
              state: 'on'
            - condition: state
              entity_id: binary_sensor.ventilation_bedroom_is_ventilation
              state: 'on'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_bedroom
            data_template:
              position: '{{ states("input_number.curtain_bedroom_position_ventilation") }}'
        # is night closed
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_night
              state: 'on'
            - condition: state
              entity_id: binary_sensor.night_bedroom_is_night
              state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: input_boolean.curtain_bedroom_use_ventilation
                state: 'off'
              - condition: and
                conditions:
                - condition: state
                  entity_id: input_boolean.curtain_bedroom_use_ventilation
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.ventilation_bedroom_is_ventilation
                  state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_bedroom
            data_template:
              position: '{{ states("input_number.curtain_bedroom_position_night") }}'
        # is day opend
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_bedroom_use_sensors
              state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: input_boolean.night_bedroom_is_night
                state: 'off'
              - condition: or
                conditions:
                - condition: state
                  entity_id: input_boolean.curtain_bedroom_use_night
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.night_bedroom_is_night
                  state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_bedroom
            data_template:
              position: '{{ states("input_number.curtain_bedroom_position_open") }}'

  # living
    - alias: 'living_curtains_action'
      initial_state: true
      trigger:
      - platform: state
        entity_id: input_boolean.curtain_living_use_night
      - platform: state
        entity_id: input_boolean.curtain_living_use_ventilation
      - platform: state
        entity_id: binary_sensor.sun_living_curtain_is_bright
      - platform: state
        entity_id: binary_sensor.solar_living_sun_is_hit
      - platform: state
        entity_id: binary_sensor.night_living_is_night
      - platform: state
        entity_id: binary_sensor.ventilation_living_is_ventilation
      - platform: state
        entity_id: input_number.curtain_living_position_open
      - platform: state
        entity_id: input_number.curtain_living_position_night
      - platform: state
        entity_id: input_number.curtain_living_position_sun
      - platform: state
        entity_id: input_number.curtain_living_position_ventilation
      action:
      - choose:
        # sun is bright & hit
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_living_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_living_use_sun
              state: 'on'
            - condition: state
              entity_id: binary_sensor.solar_living_sun_is_hit
              state: 'on'
            - condition: state
              entity_id: binary_sensor.sun_living_curtain_is_bright
              state: 'on'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_living
            data_template:
              position: '{{ states("input_number.curtain_living_position_sun") }}'
        # sun is not bright & hit
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_living_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_living_use_sun
              state: 'on'
            - condition: state
              entity_id: binary_sensor.solar_living_sun_is_hit
              state: 'on'
            - condition: state
              entity_id: binary_sensor.sun_living_curtain_is_bright
              state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_living
            data_template:
              position: '{{ states("input_number.curtain_living_position_open") }}'
        # is night ventilation
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_living_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_living_use_night
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_living_use_ventilation
              state: 'on'
            - condition: state
              entity_id: binary_sensor.night_living_is_night
              state: 'on'
            - condition: state
              entity_id: binary_sensor.ventilation_living_is_ventilation
              state: 'on'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_living
            data_template:
              position: '{{ states("input_number.curtain_living_position_ventilation") }}'
        # is night closed
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_living_use_sensors
              state: 'on'
            - condition: state
              entity_id: input_boolean.curtain_living_use_night
              state: 'on'
            - condition: state
              entity_id: binary_sensor.night_living_is_night
              state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: input_boolean.curtain_living_use_ventilation
                state: 'off'
              - condition: and
                conditions:
                - condition: state
                  entity_id: input_boolean.curtain_living_use_ventilation
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.ventilation_living_is_ventilation
                  state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_living
            data_template:
              position: '{{ states("input_number.curtain_living_position_night") }}'
        # is day opend
        - conditions:
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.curtain_living_use_sensors
              state: 'on'
            - condition: or
              conditions:
              - condition: state
                entity_id: input_boolean.night_living_is_night
                state: 'off'
              - condition: or
                conditions:
                - condition: state
                  entity_id: input_boolean.curtain_living_use_night
                  state: 'on'
                - condition: state
                  entity_id: binary_sensor.night_living_is_night
                  state: 'off'
          sequence:
          - service: cover.set_cover_position
            entity_id: cover.curtain_living
            data_template:
              position: '{{ states("input_number.curtain_living_position_open") }}'