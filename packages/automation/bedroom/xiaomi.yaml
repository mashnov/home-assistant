automation_bedroom_xiaomi:
  automation:
  - alias: automation_bedroom_xiaomi_1_param
    mode: queued
    trigger:
    - platform: state
      entity_id: sensor.light_night_bedrooml_brightness
    - platform: state
      entity_id: sensor.light_top_bedrooml_temperature
    - platform: state
      entity_id: light.light_xiaomi_bedroom_1
      from: "off"
      to: "on"
    condition:
    - condition: state
      entity_id: light.light_xiaomi_bedroom_1
      state: "on"
    action:
    - service: light.turn_on
      entity_id: light.light_xiaomi_bedroom_1
      data_template:
        brightness: "{{ states('sensor.light_night_bedrooml_brightness') }}"
        color_temp: "{{ states('sensor.light_top_bedrooml_temperature') }}"

  - alias: automation_bedroom_xiaomi_2_param
    mode: queued
    trigger:
    - platform: state
      entity_id: sensor.light_night_bedrooml_brightness
    - platform: state
      entity_id: sensor.light_top_bedrooml_temperature
    - platform: state
      entity_id: light.light_xiaomi_bedroom_2
      from: "off"
      to: "on"
    condition:
    - condition: state
      entity_id: light.light_xiaomi_bedroom_2
      state: "on"
    action:
    - service: light.turn_on
      entity_id: light.light_xiaomi_bedroom_2
      data_template:
        brightness: "{{ states('sensor.light_night_bedrooml_brightness') }}"
        color_temp: "{{ states('sensor.light_top_bedrooml_temperature') }}"

  - alias: automation_bedroom_xiaomi_3_param
    mode: queued
    trigger:
    - platform: state
      entity_id: sensor.light_night_bedrooml_brightness
    - platform: state
      entity_id: sensor.light_top_bedrooml_temperature
    - platform: state
      entity_id: light.light_xiaomi_bedroom_3
      from: "off"
      to: "on"
    condition:
    - condition: state
      entity_id: light.light_xiaomi_bedroom_3
      state: "on"
    action:
    - service: light.turn_on
      entity_id: light.light_xiaomi_bedroom_3
      data_template:
        brightness: "{{ states('sensor.light_night_bedrooml_brightness') }}"
        color_temp: "{{ states('sensor.light_top_bedrooml_temperature') }}"

  - alias: automation_bedroom_xiaomi_4_param
    mode: queued
    trigger:
    - platform: state
      entity_id: sensor.light_night_bedrooml_brightness
    - platform: state
      entity_id: sensor.light_top_bedrooml_temperature
    - platform: state
      entity_id: light.light_xiaomi_bedroom_4
      from: "off"
      to: "on"
    condition:
    - condition: state
      entity_id: light.light_xiaomi_bedroom_4
      state: "on"
    action:
    - service: light.turn_on
      entity_id: light.light_xiaomi_bedroom_4
      data_template:
        brightness: "{{ states('sensor.light_night_bedrooml_brightness') }}"
        color_temp: "{{ states('sensor.light_top_bedrooml_temperature') }}"

  - alias: automation_bedroom_xiaomi_5_param
    mode: queued
    trigger:
    - platform: state
      entity_id: sensor.light_night_bedrooml_brightness
    - platform: state
      entity_id: sensor.light_top_bedrooml_temperature
    - platform: state
      entity_id: light.light_xiaomi_bedroom_5
      from: "off"
      to: "on"
    condition:
    - condition: state
      entity_id: light.light_xiaomi_bedroom_5
      state: "on"
    action:
    - service: light.turn_on
      entity_id: light.light_xiaomi_bedroom_5
      data_template:
        brightness: "{{ states('sensor.light_night_bedrooml_brightness') }}"
        color_temp: "{{ states('sensor.light_top_bedrooml_temperature') }}"

  - alias: automation_bedroom_xiaomi_6_param
    mode: queued
    trigger:
    - platform: state
      entity_id: sensor.light_night_bedrooml_brightness
    - platform: state
      entity_id: sensor.light_top_bedrooml_temperature
    - platform: state
      entity_id: light.light_xiaomi_bedroom_6
      from: "off"
      to: "on"
    condition:
    - condition: state
      entity_id: light.light_xiaomi_bedroom_6
      state: "on"
    action:
    - service: light.turn_on
      entity_id: light.light_xiaomi_bedroom_6
      data_template:
        brightness: "{{ states('sensor.light_night_bedrooml_brightness') }}"
        color_temp: "{{ states('sensor.light_top_bedrooml_temperature') }}"
