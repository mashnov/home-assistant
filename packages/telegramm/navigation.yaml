navigation_telegramm:
  script:
    navigation_telegramm:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🏠 Главное меню
            
            🌡️ Средняя температура: {{ states('sensor.temperature_average') }} °C
            💧 Средняя влажность: {{ states('sensor.humidity_average') }} %
            ⏱️ Давление: {{ states('sensor.pressure_average') }} мм рт.ст.
          data:
            inline_keyboard: 
            - '🥣 Кухня :/kitchen'
            - '🧥 Коридор :/hall'
            - '🛁 Ванная :/bath'
            - '🚽 Туалет :/toilet'
            - '🛏️ Спальня :/bedroom'
            - '🛋️ Гостиная :/living'
            - '🪴 Балкон :/balcony'
            - '⚙️ Система :/system'
            - '❌ Закрыть :/hide_menu'

    navigation_telegramm_kitchen:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🥣 Кухня
            
            🌡️ Температура: {{ states('sensor.temperature_kitchen') }} °C
            💧 Влажность: {{ states('sensor.humidity_kitchen') }} %
            
            {{ iif(is_state('binary_sensor.window_kitchen_left', 'on'), '🟠 Левое окно открыто', '🟢 Левое окно закрыто') }}
            {{ iif(is_state('binary_sensor.window_kitchen_right', 'on'), '🟠 Правое окно открыто', '🟢 Правое окно закрыто') }}

            {{ iif(is_state('binary_sensor.occupancy_kitchen', 'on'), '🟠 Присутствие обнаружено', '🟢 Присутствие не обнаружено') }}
          data:
            inline_keyboard: 
            - "{{ iif(is_state('light.top_light_kitchen', 'on'), '🟢 Выключить освещение', '🔴 Включить освещение') }} :/kitchen_toggle_top_light"
            - "{{ iif(is_state('light.back_light_kitchen', 'on'), '🟢 Выключить подсветку', '🔴 Включить подсветку') }} :/kitchen_toggle_back_light"
            - "{{ iif(is_state('light.night_light_kitchen', 'on'), '🟢 Выключить ночник', '🔴 Включить ночник') }} :/kitchen_toggle_night_light"
            - "Шторы :/kitchen_toggle_curtain"
            - "🔼 :/main, 🔄 :/kitchen, ➡️ :/hall"

    navigation_telegramm_hall:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🧥 Коридор
            
            🌡️ Температура: {{ states('sensor.temperature_hall') }} °C
            💧 Влажность: {{ states('sensor.humidity_hall') }} %
            
            {{ iif(is_state('binary_sensor.hygrostat_hall_is_empty', 'on'), '🔴', '🟢') }} Вода в увлажнителе
            
            {{ iif(is_state('binary_sensor.door_hall', 'on'), '🟠 Входная дверь открыта', '🟢 Входная дверь закрыта') }}
            {{ iif(is_state('binary_sensor.occupancy_hall', 'on'), '🟠 Присутствие обнаружено', '🟢 Присутствие не обнаружено') }}
          data:
            inline_keyboard: 
            - "{{ iif(is_state('light.top_light_hall', 'on'), '🟢 Выключить освещение', '🔴 Включить освещение') }} :/hall_toggle_top_light"
            - "{{ iif(is_state('light.back_light_hall', 'on'), '🟢 Выключить подсветку', '🔴 Включить подсветку') }} :/hall_toggle_back_light"
            - "{{ iif(is_state('light.night_light_hall', 'on'), '🟢 Выключить ночник', '🔴 Включить ночник') }} :/hall_toggle_night_light"
            - "{{ iif(is_state('switch.relay_hall_l2', 'on'), '🟢 Выключить увлажнитель', '🔴 Включить увлажнитель') }} :/hall_toggle_humidifier"
            - "⬅️ :/kitchen, 🔼 :/main, 🔄 :/hall, ➡️ :/bath"

    navigation_telegramm_bath:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🛁 Ванная

            🌡️ Температура: {{ states('sensor.temperature_bath') }} °C
            💧 Влажность: {{ states('sensor.humidity_bath') }} %

            {{ iif(is_state('binary_sensor.occupancy_bath', 'on'), '🟠 Занято', '🟢 Свободно') }}
          data:
            inline_keyboard: 
            - "{{ iif(is_state('light.top_light_bath', 'on'), '🟢 Выключить освещение', '🔴 Включить освещение') }} :/bath_toggle_top_light"
            - "{{ iif(is_state('light.night_light_bath', 'on'), '🟢 Выключить ночник', '🔴 Включить ночник') }} :/bath_toggle_night_light"
            - "{{ iif(is_state('fan.fan_toilet', 'on'), '🟢 Выключить осушитель', '🔴 Включить осушитель') }} :/bath_toggle_dehumidifier"
            - "⬅️ :/hall, 🔼 :/main, 🔄 :/bath, ➡️ :/toilet"

    navigation_telegramm_toilet:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🚽 Туалет

            {{ iif(is_state('binary_sensor.occupancy_toilet', 'on'), '🟠 Занято', '🟢 Свободно') }}
          data:
            inline_keyboard: 
            - "{{ iif(is_state('light.top_light_toilet', 'on'), '🟢 Выключить освещение', '🔴 Включить освещение') }} :/toilet_toggle_top_light"
            - "{{ iif(is_state('light.night_light_toilet', 'on'), '🟢 Выключить ночник', '🔴 Включить ночник') }} :/toilet_toggle_night_light"
            - "{{ iif(is_state('fan.fan_toilet', 'on'), '🟢 Выключить вытяжку', '🔴 Включить вытяжку') }} :/toilet_toggle_dehumidifier"
            - "⬅️ :/bath, 🔼 :/main, 🔄 :/toilet, ➡️ :/bedroom"

    navigation_telegramm_bedroom:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🛏️ Спальня

            🌡️ Температура: {{ states('sensor.temperature_bedroom') }} °C
            💧 Влажность: {{ states('sensor.humidity_bedroom') }} %
            
            {{ iif(is_state('binary_sensor.hygrostat_bedroom_is_empty', 'on'), '🔴', '🟢') }} Вода в увлажнителе
            
            {{ iif(is_state('binary_sensor.door_bedroom', 'on'), '🟢 Дверь открыта', '🟠 Дверь закрыта') }}
            {{ iif(is_state('binary_sensor.window_bedroom_left', 'on'), '🟠 Левое окно открыто', '🟢 Левое окно закрыто') }}
            {{ iif(is_state('binary_sensor.window_bedroom_right', 'on'), '🟠 Правое окно открыто', '🟢 Правое окно закрыто') }}
          data:
            inline_keyboard: 
            - "{{ iif(is_state('light.top_light_bedroom', 'on'), '🟢 Выключить освещение', '🔴 Включить освещение') }} :/bedroom_toggle_top_light"
            - "{{ iif(is_state('light.back_light_bedroom', 'on'), '🟢 Выключить подсветку', '🔴 Включить подсветку') }} :/bedroom_toggle_night_light"
            - "{{ iif(is_state('switch.relay_bedroom_l2', 'on'), '🟢 Выключить увлажнитель', '🔴 Включить увлажнитель') }} :/bedroom_toggle_humidifier"
            - "Шторы :/bedroom_toggle_curtain"
            - "⬅️ :/toilet, 🔼 :/main, 🔄 :/bedroom, ➡️ :/living"

    navigation_telegramm_living:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🛋️ Гостиная

            🌡️ Температура: {{ states('sensor.temperature_living') }} °C
            💧 Влажность: {{ states('sensor.humidity_living') }} %

            {{ iif(is_state('binary_sensor.hygrostat_living_is_empty', 'on'), '🔴', '🟢') }} Вода в увлажнителе
            
            {{ iif(is_state('binary_sensor.door_living', 'on'), '🟢 Дверь открыта', '🟠 Дверь закрыта') }}
            {{ iif(is_state('binary_sensor.window_living', 'on'), '🟠 Окно открыто', '🟢 Окно закрыто') }}
          data:
            inline_keyboard: 
            - "{{ iif(is_state('light.top_light_living', 'on'), '🟢 Выключить освещение', '🔴 Включить освещение') }} :/living_toggle_top_light"
            - "{{ iif(is_state('light.back_light_living', 'on'), '🟢 Выключить подсветку', '🔴 Включить подсветку') }} :/living_toggle_night_light"
            - "{{ iif(is_state('switch.relay_living_l1', 'on'), '🟢 Выключить увлажнитель', '🔴 Включить увлажнитель') }} :/living_toggle_humidifier"
            - "📷 Камера :/living_get_camera_image"
            - "Шторы :/living_toggle_curtain"
            - "⬅️ :/bedroom, 🔼 :/main, 🔄 :/living, ➡️ :/balcony"

    navigation_telegramm_balcony:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            🪴 Балкон

            🌡️ Температура: {{ states('sensor.temperature_balcony') }} °C
            💧 Влажность: {{ states('sensor.humidity_balcony') }} %
            🌤️ Освещенность: {{ states('sensor.illuminance_balcony') }} lux

            {{ iif(is_state('binary_sensor.door_balcony', 'on'), '🟠 Дверь открыта', '🟢 Дверь закрыта') }} 
          data:
            inline_keyboard: 
            - "{{ iif(is_state('light.back_light_balcony', 'on'), '🟢 Выключить подсветку', '🔴 Включить пдсветку') }} :/balcony_toggle_top_light"
            - "{{ iif(is_state('light.night_light_balcony', 'on'), '🟢 Выключить ночник', '🔴 Включить ночник') }} :/balcony_toggle_night_light"
            - "{{ iif(is_state('switch.relay_balcony_l4', 'on'), '🟢 Выключить розетку', '🔴 Включить розетку') }} :/balcony_toggle_outlet"
            - "{{ iif(is_state('switch.relay_balcony_l3', 'on'), '🟢 Выключить фонтан', '🔴 Включить фонтан') }} :/balcony_toggle_sprinkler"
            - "⬅️ :/living, 🔼 :/main, 🔄 :/balcony"

    navigation_telegramm_system:
      mode: 'queued'
      sequence:
      - service: notify.telegram_home_group_id
        data_template:
          message: |
            ⚙️ Система
            
            Время запуска: {{ as_timestamp(states('sensor.last_boot')) | timestamp_custom('%Y-%m-%d %H:%M (%Z)') }}
            Местное время: {{ now().timestamp() | timestamp_custom('%Y-%m-%d %H:%M (%Z)') }}
            
            Температура процессора: {{ states('sensor.processor_temperature') }} °C
            Загрузка процессора: {{ states('sensor.load_1m') }} %
            Использовано ОЗУ: {{ states('sensor.memory_use_percent') }} %
            Использовано памяти: {{ states('sensor.disk_use_percent') }} %
          data:
            inline_keyboard: 
            - "⚠️ Перезагрузка :/restart"
            - "🔼 :/main, 🔄 :/system"

  automation:
  - alias: navigation_telegramm
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/main'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/main@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/main'
    action:
    - service: script.navigation_telegramm

  - alias: navigation_telegramm_kitchen
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/kitchen'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/kitchen@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/kitchen'
    action:
    - service: script.navigation_telegramm_kitchen

  - alias: navigation_telegramm_hall
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/hall'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/hall@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/hall'
    action:
    - service: script.navigation_telegramm_hall

  - alias: navigation_telegramm_bath
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/bath'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/bath@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/bath'
    action:
    - service: script.navigation_telegramm_bath

  - alias: navigation_telegramm_toilet
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/toilet'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/toilet@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/toilet'
    action:
    - service: script.navigation_telegramm_toilet

  - alias: navigation_telegramm_bedroom'
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/bedroom'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/bedroom@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/bedroom'
    action:
    - service: script.navigation_telegramm_bedroom

  - alias: navigation_telegramm_living
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/living'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/living@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/living'
    action:
    - service: script.navigation_telegramm_living

  - alias: navigation_telegramm_balcony
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/balcony'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/balcony@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/balcony'
    action:
    - service: script.navigation_telegramm_balcony

  - alias: navigation_telegramm_system'
    mode: 'queued'
    trigger:
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/system'
    - platform: event
      event_type: telegram_command
      event_data:
        command: '/system@casa_d_amore_bot'
    - platform: event
      event_type: telegram_callback
      event_data:
        command: '/system'
    action:
    - service: script.navigation_telegramm_system

