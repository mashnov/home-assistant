### todo test script entity
curtain_shared:
  input_number:
    curtain_azimuth_target: # 160
      max: 360
      min: 0
    curtain_elevation_target: # 30
      max: 90
      min: 0
    curtain_azimuth_offset: # 15
      max: 50
      min: 0
    curtain_elevation_offset: # 5
      max: 20
      min: 0
    curtain_illuminance: # 3500
      max: 9000
      min: 0

  script:
    curtain_set_position:
      mode: 'queued'
      sequence:
      - service: cover.set_cover_position
        entity_id: '{{ entity }}'
        data_template:
          position: '{{ position }}'

  template:
  - binary_sensor:
    - name: 'curtain_is_illuminance'
      delay_on: '00:00:15'
      delay_off: '00:00:30'
      state: >
        {% set target = states('input_number.curtain_illuminance') | int(0) %}
        {% set sensor = states('sensor.illuminance_balcony') | int(0) %}
        {{ sensor > target }}

    - name: 'curtain_is_sunny'
      state: >
        {% set illuminanceValue = is_state('binary_sensor.curtain_is_illuminance', 'on') %}
        {% set azimuthSensor = state_attr('sun.sun', 'azimuth') | int(0) %}
        {% set azimuthTarget = states('input_number.curtain_azimuth_target') | int(0) %}
        {% set azimuthOffset = states('input_number.curtain_azimuth_offset') | int(0) %}
        {% set azimuthMin = azimuthTarget - azimuthOffset %}
        {% set azimuthMax = azimuthTarget + azimuthOffset %}
        {% set azimuthValue = (azimuthMin <= azimuthSensor) and (azimuthSensor <= azimuthMax) %}
        {% set elevationSensor = state_attr('sun.sun', 'elevation') | int(0) %}
        {% set elevationTarget = states('input_number.curtain_elevation_target') | int(0) %}
        {% set elevationOffset = states('input_number.curtain_elevation_offset') | int(0) %}
        {% set elevationMin = elevationTarget - elevationOffset %}
        {% set elevationMax = elevationTarget + elevationOffset %}
        {% set elevationValue = (elevationMin <= elevationSensor) and (elevationSensor <= elevationMax) %}
        {{ illuminanceValue and azimuthValue and elevationValue }}