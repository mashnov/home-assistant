night_mode:
  input_datetime:
    night_mode_on_time: # 01:00:00
      has_date: false
      has_time: true
    
    night_mode_off_time: # 10:30:00
      has_date: false
      has_time: true

  input_boolean:
    is_night_mode:

  template:
  - binary_sensor:    
    - name: 'is_night_mode'
      unique_id: is_night_mode
      state: >
        {% set current = now().time() %}
        {% set from = strptime(states('input_datetime.night_mode_on_time'), "%H:%M:%S").time() %}
        {% set till = strptime(states('input_datetime.night_mode_off_time'), "%H:%M:%S").time() %}
        {% if from > till %}
          {{ (from <= current) or (current <= till) }}
        {% else %}
          {{ (from <= current) and (current <= till) }}
        {% endif %}

  automation:
  - alias: 'night_mode'
    mode: 'queued'
    trigger:
    - id: 'night_mode_on'
      platform: state
      entity_id: 'binary_sensor.is_night_mode'
      from: 'off'
      to: 'on'
    - id: 'night_mode_off'
      platform: state
      entity_id: 'binary_sensor.is_night_mode'
      from: 'on'
      to: 'off'
    - id: 'night_mode_toggle'
      platform: state
      entity_id: sensor.switch_bedroom_action
      to: 'single_both'
    - id: 'night_mode_toggle'
      platform: state
      entity_id: sensor.switch_living_action
      to: 'single_both'
    - id: 'night_mode_toggle'
      platform: state
      entity_id: sensor.switch_restroom_action
      to: 'single_both'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'night_mode_on'
        sequence:
        - service: input_boolean.turn_on
          entity_id: input_boolean.is_night_mode
      - conditions:
        - condition: trigger
          id: 'night_mode_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.is_night_mode
      - conditions:
        - condition: trigger
          id: 'night_mode_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.is_night_mode
