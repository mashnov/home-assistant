curtain:
  input_number:
    curtain_bedroom_open: # 5
      max: 100
      min: 0
    
    curtain_bedroom_night: # 85
      max: 100
      min: 0

    curtain_cube_step: # 5
      max: 100
      min: 0

  automation:
  - alias: 'curtain_bedroom_night'
    mode: 'queued'
    trigger:
    - id: 'close'
      platform: state
      entity_id: 'input_boolean.is_night_mode' 
      from: 'off'
      to: 'on'
    - id: 'open'
      platform: state
      entity_id: 'input_boolean.is_night_mode' 
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'close'
        sequence:
        - service: cover.set_cover_position
          entity_id: cover.curtain_bedroom
          data_template:
            position: "{{ states('input_number.curtain_bedroom_night') | int(0) }}"
      - conditions:
        - condition: trigger
          id: 'open'
        sequence:
        - service: cover.set_cover_position
          entity_id: cover.curtain_bedroom
          data_template:
            position: "{{ states('input_number.curtain_bedroom_open') | int(0) }}"

  - alias: 'curtain_bedroom_controll'
    mode: 'queued'
    trigger:
    - id: 'open'
      platform: state
      entity_id: sensor.cube_bedroom_action
      to: 'rotate_right'
    - id: 'close'
      platform: state
      entity_id: sensor.cube_bedroom_action
      to: 'rotate_left'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'close'
        sequence:
        - service: cover.set_cover_position
          entity_id: cover.curtain_bedroom
          data_template:
            position: >
              {% set step = states('input_number.curtain_cube_step') | int(0) %}
              {% set position = state_attr('cover.curtain_bedroom', 'position') | int(0) + step %}
              {{ [[0 , position] | max, [100, position] | min] | min }}
      - conditions:
        - condition: trigger
          id: 'open'
        sequence:
        - service: cover.set_cover_position
          entity_id: cover.curtain_bedroom
          data_template:
            position: > 
              {% set step = states('input_number.curtain_cube_step') | int(0) %}
              {% set position = state_attr('cover.curtain_bedroom', 'position') | int(0) - step %}
              {{ [[0 , position] | max, [100, position] | min] | max }}

  - alias: 'curtain_living_controll'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: sensor.living_cube_action
      to: 'rotate_right'
    - platform: state
      entity_id: sensor.living_cube_action
      to: 'rotate_left'
    action:
    - service: script.console
      data:
        message: |
          {% set position = state_attr('cover.curtain_living', 'position') | int(0) %}
          {% set angle = trigger.to_state.attributes.action_angle | int(0) %}
          {% set percent = angle / 360 * 100 %}
          {% set destination = position + percent %}
          {% if angle > 0 %}
            {{ [[0 , destination] | max, [100, destination] | min] | max }}
          {% else %}
            {{ [[0 , destination] | max, [100, destination] | min] | min }}
          {% endif %}

    - service: cover.set_cover_position
      entity_id: cover.curtain_living
      data_template:
        position: >
          {% set position = state_attr('cover.curtain_living', 'position') | int(0) %}
          {% set angle = trigger.to_state.attributes.action_angle | int(0) %}
          {% set percent = angle / 360 * 100 %}
          {% set destination = position + percent %}
          {% if angle > 0 %}
            {{ [[0 , destination] | max, [100, destination] | min] | max }}
          {% else %}
            {{ [[0 , destination] | max, [100, destination] | min] | min }}
          {% endif %}
