bulb_light_living:
  light:
  - platform: template
    lights:
      bulb_light_living_1:
        value_template: "{{ is_state('light.xiaomi_light_living_1', 'on') }}"
        level_template: "{{ state_attr('light.xiaomi_light_living_1', 'brightness') | int(0) }}"
        temperature_template: "{{ state_attr('light.xiaomi_light_living_1', 'color_temp') | int(333) }}"
        supports_transition_template: "{{ true }}"
        min_mireds_template: 175
        max_mireds_template: 333
        turn_on:
        - service: script.bulb_light_living_on
          data_template:
            entity_id: light.xiaomi_light_living_1
        turn_off:
        - service: light.turn_off
          entity_id: light.xiaomi_light_living_1
        set_level:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_1
          data_template:
            brightness: "{{ brightness }}"
        set_temperature:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_1
          data_template:
            color_temp: "{{ color_temp }}"

      bulb_light_living_2:
        value_template: "{{ is_state('light.xiaomi_light_living_2', 'on') }}"
        level_template: "{{ state_attr('light.xiaomi_light_living_2', 'brightness') | int(0) }}"
        temperature_template: "{{ state_attr('light.xiaomi_light_living_2', 'color_temp') | int(333) }}"
        supports_transition_template: "{{ true }}"
        min_mireds_template: 175
        max_mireds_template: 333
        turn_on:
        - service: script.bulb_light_living_on
          data_template:
            entity_id: light.xiaomi_light_living_2
        turn_off:
        - service: light.turn_off
          entity_id: light.xiaomi_light_living_2
        set_level:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_2
          data_template:
            brightness: "{{ brightness }}"
        set_temperature:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_2
          data_template:
            color_temp: "{{ color_temp }}"

      bulb_light_living_3:
        value_template: "{{ is_state('light.xiaomi_light_living_3', 'on') }}"
        level_template: "{{ state_attr('light.xiaomi_light_living_3', 'brightness') | int(0) }}"
        temperature_template: "{{ state_attr('light.xiaomi_light_living_3', 'color_temp') | int(333) }}"
        supports_transition_template: "{{ true }}"
        min_mireds_template: 175
        max_mireds_template: 333
        turn_on:
        - service: script.bulb_light_living_on
          data_template:
            entity_id: light.xiaomi_light_living_3
        turn_off:
        - service: light.turn_off
          entity_id: light.xiaomi_light_living_3
        set_level:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_3
          data_template:
            brightness: "{{ brightness }}"
        set_temperature:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_3
          data_template:
            color_temp: "{{ color_temp }}"

      bulb_light_living_4:
        value_template: "{{ is_state('light.xiaomi_light_living_4', 'on') }}"
        level_template: "{{ state_attr('light.xiaomi_light_living_4', 'brightness') | int(0) }}"
        temperature_template: "{{ state_attr('light.xiaomi_light_living_4', 'color_temp') | int(333) }}"
        supports_transition_template: "{{ true }}"
        min_mireds_template: 175
        max_mireds_template: 333
        turn_on:
        - service: script.bulb_light_living_on
          data_template:
            entity_id: light.xiaomi_light_living_4
        turn_off:
        - service: light.turn_off
          entity_id: light.xiaomi_light_living_4
        set_level:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_4
          data_template:
            brightness: "{{ brightness }}"
        set_temperature:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_4
          data_template:
            color_temp: "{{ color_temp }}"

      bulb_light_living_5:
        value_template: "{{ is_state('light.xiaomi_light_living_5', 'on') }}"
        level_template: "{{ state_attr('light.xiaomi_light_living_5', 'brightness') | int(0) }}"
        temperature_template: "{{ state_attr('light.xiaomi_light_living_5', 'color_temp') | int(333) }}"
        supports_transition_template: "{{ true }}"
        min_mireds_template: 175
        max_mireds_template: 333
        turn_on:
        - service: script.bulb_light_living_on
          data_template:
            entity_id: light.xiaomi_light_living_5
        turn_off:
        - service: light.turn_off
          entity_id: light.xiaomi_light_living_5
        set_level:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_5
          data_template:
            brightness: "{{ brightness }}"
        set_temperature:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_5
          data_template:
            color_temp: "{{ color_temp }}"

      bulb_light_living_6:
        value_template: "{{ is_state('light.xiaomi_light_living_6', 'on') }}"
        level_template: "{{ state_attr('light.xiaomi_light_living_6', 'brightness') | int(0) }}"
        temperature_template: "{{ state_attr('light.xiaomi_light_living_6', 'color_temp') | int(333) }}"
        supports_transition_template: "{{ true }}"
        min_mireds_template: 175
        max_mireds_template: 333
        turn_on:
        - service: script.bulb_light_living_on
          data_template:
            entity_id: light.xiaomi_light_living_6
        turn_off:
        - service: light.turn_off
          entity_id: light.xiaomi_light_living_6
        set_level:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_6
          data_template:
            brightness: "{{ brightness }}"
        set_temperature:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living_6
          data_template:
            color_temp: "{{ color_temp }}"

  script:
    bulb_light_living_on:
      mode: 'queued'
      sequence:
      - if:
        - condition: state
          state: 'off'
          entity_id: switch.switch_living
        then:
        - service: switch.turn_on
          entity_id: switch.switch_living
        else:
        - service: light.turn_on
          data_template:
            entity_id: "{{ entity_id }}"

  automation:
  - alias: 'bulb_light_living_1'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.bulb_light_living_1'
    - platform: state
      entity_id: 'sensor.bulb_light_brightness'
    - platform: state
      entity_id: 'sensor.bulb_light_temperature'
    condition:
    - condition: state
      entity_id: light.bulb_light_living_1
      state: 'on'
    action:
    - service: light.turn_on
      entity_id: light.bulb_light_living_1
      data_template:
        brightness: "{{ states('sensor.bulb_light_brightness') }}"
        color_temp: "{{ states('sensor.bulb_light_temperature') }}"

  - alias: 'bulb_light_living_2'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.bulb_light_living_2'
    - platform: state
      entity_id: 'sensor.bulb_light_brightness'
    - platform: state
      entity_id: 'sensor.bulb_light_temperature'
    condition:
    - condition: state
      entity_id: light.bulb_light_living_2
      state: 'on'
    action:
    - service: light.turn_on
      entity_id: light.bulb_light_living_2
      data_template:
        brightness: "{{ states('sensor.bulb_light_brightness') }}"
        color_temp: "{{ states('sensor.bulb_light_temperature') }}"

  - alias: 'bulb_light_living_3'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.bulb_light_living_3'
    - platform: state
      entity_id: 'sensor.bulb_light_brightness'
    - platform: state
      entity_id: 'sensor.bulb_light_temperature'
    condition:
    - condition: state
      entity_id: light.bulb_light_living_3
      state: 'on'
    action:
    - service: light.turn_on
      entity_id: light.bulb_light_living_3
      data_template:
        brightness: "{{ states('sensor.bulb_light_brightness') }}"
        color_temp: "{{ states('sensor.bulb_light_temperature') }}"

  - alias: 'bulb_light_living_4'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.bulb_light_living_4'
    - platform: state
      entity_id: 'sensor.bulb_light_brightness'
    - platform: state
      entity_id: 'sensor.bulb_light_temperature'
    condition:
    - condition: state
      entity_id: light.bulb_light_living_4
      state: 'on'
    action:
    - service: light.turn_on
      entity_id: light.bulb_light_living_4
      data_template:
        brightness: "{{ states('sensor.bulb_light_brightness') }}"
        color_temp: "{{ states('sensor.bulb_light_temperature') }}"

  - alias: 'bulb_light_living_5'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.bulb_light_living_5'
    - platform: state
      entity_id: 'sensor.bulb_light_brightness'
    - platform: state
      entity_id: 'sensor.bulb_light_temperature'
    condition:
    - condition: state
      entity_id: light.bulb_light_living_5
      state: 'on'
    action:
    - service: light.turn_on
      entity_id: light.bulb_light_living_5
      data_template:
        brightness: "{{ states('sensor.bulb_light_brightness') }}"
        color_temp: "{{ states('sensor.bulb_light_temperature') }}"

  - alias: 'bulb_light_living_6'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.bulb_light_living_6'
    - platform: state
      entity_id: 'sensor.bulb_light_brightness'
    - platform: state
      entity_id: 'sensor.bulb_light_temperature'
    condition:
    - condition: state
      entity_id: light.bulb_light_living_6
      state: 'on'
    action:
    - service: light.turn_on
      entity_id: light.bulb_light_living_6
      data_template:
        brightness: "{{ states('sensor.bulb_light_brightness') }}"
        color_temp: "{{ states('sensor.bulb_light_temperature') }}"
