blocker:
  input_boolean:
    blocker_top_light_kitchen:
    blocker_top_light_hall:
    blocker_top_light_bath:
    blocker_top_light_bedroom:
    blocker_top_light_living:
    blocker_back_light_kitchen:
    blocker_back_light_balcony:
    blocker_night_light_bath:
    blocker_night_light_balcony:
    blocker_fan_toilet:
    blocker_balcony_sprinkler:
    blocker_balcony_socket:

  timer:
    blocker_top_light_kitchen:
      duration: '01:00:00'
    blocker_top_light_bath:
      duration: '01:00:00'
    blocker_top_light_hall:
      duration: '01:00:00'
    blocker_top_light_bedroom:
      duration: '01:00:00'
    blocker_top_light_living:
      duration: '01:00:00'
    blocker_back_light_kitchen:
      duration: '01:00:00'
    blocker_back_light_balcony:
      duration: '00:10:00'
    blocker_night_light_bath:
      duration: '01:00:00'
    blocker_night_light_balcony:
      duration: '00:10:00'
    blocker_fan_toilet:
      duration: '00:10:00'
    blocker_balcony_sprinkler:
      duration: '00:10:00'
    blocker_balcony_socket:
      duration: '01:00:00'

  automation:
  ### KITCHEN TOP LIGHT
  - alias: 'blocker_top_light_kitchen_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.kitchen_switch_action
      to: 'single_left'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_top_light_kitchen
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_top_light_kitchen
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_top_light_kitchen

  - alias: 'blocker_top_light_kitchen_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_kitchen'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_kitchen'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_top_light_kitchen
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_top_light_kitchen

  ### KITCHEN BACK LIGHT
  - alias: 'blocker_back_light_kitchen_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.kitchen_switch_action
      to: 'single_right'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_back_light_kitchen
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_back_light_kitchen
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_back_light_kitchen

  - alias: 'blocker_back_light_kitchen_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_back_light_kitchen'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_back_light_kitchen'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_back_light_kitchen
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_back_light_kitchen

  ### BATH TOP LIGHT
  - alias: 'blocker_top_light_bath_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_bath_action
      to: 'double'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_top_light_bath
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_top_light_bath
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_top_light_bath

  - alias: 'blocker_top_light_bath_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_bath'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_bath'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_top_light_bath
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_top_light_bath

  ### BATH NIGHT LIGHT 
  - alias: 'blocker_night_light_bath_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_bath_action
      to: 'single'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_night_light_bath
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_night_light_bath
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_night_light_bath

  - alias: 'blocker_night_light_bath_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_night_light_bath'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_night_light_bath'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_night_light_bath
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_night_light_bath

  ### BATH LIGHT 
  - alias: 'blocker_light_bath'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: sensor.hall_switch_restroom_action
      to: 'single_left'
    action:
    - choose:
      - conditions:
        - condition: template
          value_template: >
            {% set isNightLightBlocker = is_state("input_boolean.blocker_night_light_bath", "on") %}
            {% set isTopLightBlocker = is_state("input_boolean.blocker_top_light_bath", "on") %}
            {{ isNightLightBlocker or isTopLightBlocker }}
        sequence:
        - parallel:
          - service: input_boolean.turn_off
            entity_id: input_boolean.blocker_night_light_bath
          - service: input_boolean.turn_off
            entity_id: input_boolean.blocker_top_light_bath
      - conditions:
        - condition: state
          entity_id: input_boolean.blocker_night_light_bath
          state: 'off'
        - condition: state
          entity_id: input_boolean.is_night_mode
          state: 'on'
        sequence:
        - service: input_boolean.turn_on
          entity_id: input_boolean.blocker_night_light_bath
      - conditions:
        - condition: state
          entity_id: input_boolean.blocker_night_light_bath
          state: 'off'
        - condition: state
          entity_id: input_boolean.is_night_mode
          state: 'off'
        sequence:
        - parallel:
          - service: input_boolean.turn_on
            entity_id: input_boolean.blocker_night_light_bath
          - service: input_boolean.turn_on
            entity_id: input_boolean.blocker_top_light_bath

  ### HALL TOP LIGHT
  - alias: 'blocker_top_light_hall_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.hall_switch_action
      to: 'single'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_top_light_hall
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_top_light_hall
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_top_light_hall

  - alias: 'blocker_top_light_hall_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_hall'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_hall'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_top_light_hall
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_top_light_hall

  ### BEDROOM TOP LIGHT
  - alias: 'blocker_top_light_bedroom_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.bedroom_switch_action
      to: 'single'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_top_light_bedroom
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_top_light_bedroom
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_top_light_bedroom

  - alias: 'blocker_top_light_bedroom_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_bedroom'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_bedroom'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_top_light_bedroom
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_top_light_bedroom

  ### LIVING TOP LIGHT
  - alias: 'blocker_top_light_living_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.living_switch_action
      to: 'single'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_top_light_living
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_top_light_living
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_top_light_living

  - alias: 'blocker_top_light_living_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_living'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_top_light_living'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_top_light_living
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_top_light_living
  
  ### BALCONY BACK LIGHT
  - alias: 'blocker_back_light_balcony_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_balcony_action
      to: 'double'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_back_light_balcony
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_back_light_balcony
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_back_light_balcony    
    
  - alias: 'blocker_back_light_balcony_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_back_light_balcony'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_back_light_balcony'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_back_light_balcony
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_back_light_balcony

  ### BALCONY NIGHT LIGHT
  - alias: 'blocker_night_light_balcony_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_balcony_action
      to: 'single'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_night_light_balcony
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_night_light_balcony
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_night_light_balcony

  - alias: 'blocker_night_light_balcony_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_night_light_balcony'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_night_light_balcony'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_night_light_balcony
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_night_light_balcony

  ### TOILET FAN
  - alias: 'blocker_fan_toilet_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_toilet_action
      to: 'single'
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_bath_action
      to: 'hold'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_fan_toilet
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_fan_toilet
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_fan_toilet

  - alias: 'blocker_fan_toilet_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_fan_toilet'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_fan_toilet'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_fan_toilet
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_fan_toilet

  ### BALCONY SOCKET
  - alias: 'blocker_balcony_socket_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_balcony_action
      to: 'hold'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_balcony_socket
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_balcony_socket
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_balcony_socket

  - alias: 'blocker_balcony_socket_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_balcony_socket'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_balcony_socket'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_balcony_socket
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_balcony_socket

  ### BALCONY SPRINKLER
  - alias: 'blocker_balcony_sprinkler_boolean'
    mode: 'queued'
    trigger:
    - id: 'boolean_toggle'
      platform: state
      entity_id: sensor.button_balcony_action
      to: 'shake'
    - id: 'boolean_off'
      platform: event
      event_type: timer.finished
      event_data:
        entity_id: timer.blocker_balcony_sprinkler
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'boolean_toggle'
        sequence:
        - service: input_boolean.toggle
          entity_id: input_boolean.blocker_balcony_sprinkler
      - conditions:
        - condition: trigger
          id: 'boolean_off'
        sequence:
        - service: input_boolean.turn_off
          entity_id: input_boolean.blocker_balcony_sprinkler

  - alias: 'blocker_balcony_sprinkler_timer'
    mode: 'queued'
    trigger:
    - id: 'timer_on'
      platform: state
      entity_id: 'input_boolean.blocker_balcony_sprinkler'
      from: 'off'
      to: 'on'
    - id: 'timer_off'
      platform: state
      entity_id: 'input_boolean.blocker_balcony_sprinkler'
      from: 'on'
      to: 'off'
    action:
    - choose:
      - conditions:
        - condition: trigger
          id: 'timer_on'
        sequence:
        - service: timer.start
          entity_id: timer.blocker_balcony_sprinkler
      - conditions:
        - condition: trigger
          id: 'timer_off'
        sequence:
        - service: timer.cancel
          entity_id: timer.blocker_balcony_sprinkler
