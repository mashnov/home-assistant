light_param:
  input_number:
    light_param_shi_hue: # 24
      max: 30
      min: 0

    light_param_brightness_day: # 255
      max: 255
      min: 0

    light_param_brightness_night: # 50
      max: 255
      min: 0

    light_param_shi_saturation: # 95
      max: 100
      min: 95
    
    light_param_shi_brightness_day: # 255
      max: 100
      min: 0

    light_param_shi_brightness_night: # 50
      max: 30
      min: 0

  template:
  - sensor:      
    - name: 'light_param_temperature'
      state: >
        {% set minValue = 175 %}
        {% set maxValue = 333 %}
        {% set target = states('sensor.illuminance_max') | int(1) %}
        {% set sensor = states('sensor.illuminance_balcony') | int(0) %}
        {% set percent = min((sensor / max(1, target) ) * 100, 100) | round %}
        {% set temperature = (maxValue / 100 * (100 - percent)) | round %}
        {{ max(minValue, temperature) }}

    - name: 'light_param_brightness'
      state: >
        {% set isNightMode = is_state('input_boolean.is_night_mode', 'on') %}
        {% set nightValue = states('input_number.light_param_brightness_night') | int(0) %}
        {% set dayValue = states('input_number.light_param_brightness_day') | int(0) %}
        {{ iif(isNightMode, nightValue, dayValue) }}

    - name: 'light_param_shi_brightness'
      state: >
        {% set isNightMode = is_state('input_boolean.is_night_mode', 'on') %}
        {% set nightValue = states('input_number.light_param_shi_brightness_night') | int(0) %}
        {% set dayValue = states('input_number.light_param_shi_brightness_day') | int(0) %}
        {{ iif(isNightMode, nightValue, dayValue) }}

  automation:
  - alias: 'light_params_kitchen'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.xiaomi_light_kitchen'
      to: 'on'
    - platform: state
      entity_id: 'sensor.light_param_temperature'
    - platform: state
      entity_id: 'sensor.light_param_brightness'
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.night_light_hall
          state: 'on'
        sequence:
        - service: light.turn_on
          entity_id: light.xiaomi_light_kitchen
          data_template:
            brightness: "{{ states('sensor.light_param_brightness') }}"
            color_temp: "{{ states('sensor.light_param_temperature') }}"

  - alias: 'light_params_hall'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.xiaomi_light_hall'
      to: 'on'
    - platform: state
      entity_id: 'sensor.light_param_brightness'
    - platform: state
      entity_id: 'sensor.light_param_temperature'
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.night_light_hall
          state: 'on'
        sequence:
        - service: light.turn_on
          entity_id: light.xiaomi_light_hall
          data_template:
            brightness: "{{ states('sensor.light_param_brightness') }}"
            color_temp: "{{ states('sensor.light_param_temperature') }}"

  - alias: 'light_params_bedroom'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.xiaomi_light_bedroom'
      to: 'on'
    - platform: state
      entity_id: 'sensor.light_param_brightness'
    - platform: state
      entity_id: 'sensor.light_param_temperature'
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.night_light_hall
          state: 'on'
        sequence:
        - service: light.turn_on
          entity_id: light.xiaomi_light_bedroom
          data_template:
            brightness: "{{ states('sensor.light_param_brightness') }}"
            color_temp: "{{ states('sensor.light_param_temperature') }}"

  - alias: 'light_params_living'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.xiaomi_light_living'
      to: 'on'
    - platform: state
      entity_id: 'sensor.light_param_brightness'
    - platform: state
      entity_id: 'sensor.light_param_temperature'
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.night_light_hall
          state: 'on'
        sequence:
        - service: light.turn_on
          entity_id: light.xiaomi_light_living
          data_template:
            brightness: "{{ states('sensor.light_param_brightness') }}"
            color_temp: "{{ states('sensor.light_param_temperature') }}"

  - alias: 'light_param_night_light_hall'
    mode: 'queued'
    trigger:
    - platform: state
      entity_id: 'light.night_light_hall'
      to: 'on'
    - platform: state
      entity_id: 'sensor.light_param_shi_brightness'
    - platform: state
      entity_id: 'input_number.light_param_shi_hue'
    - platform: state
      entity_id: 'sensor.light_param_shi_saturation'
    action:
    - choose:
      - conditions:
        - condition: state
          entity_id: light.night_light_hall
          state: 'on'
        sequence:
        - service: light.turn_on
          entity_id: light.night_light_hall
          data_template:
            brightness: "{{ states('sensor.light_param_shi_brightness') }}"
            hs_color: ["{{ states('input_number.light_param_shi_hue') | int(0) }}", "{{ states('input_number.light_param_shi_saturation') | int(0) }}"]
